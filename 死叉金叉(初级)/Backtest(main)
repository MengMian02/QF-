from Backtest import *
import pandas as pd

fund_EMA = 10000
fund_alt = 10000
initial_fund = 10000
stock_number = 0
n = 0


def buy_action():
    global fund_EMA, stock_number
    remaining_fund = fund_EMA % buy_price
    stock_number = fund_EMA // buy_price
    fund_EMA = remaining_fund

def sell_action():
    global fund_EMA, stock_number
    left_over = fund_EMA
    remaining_fund = stock_number * sell_price
    fund_EMA = remaining_fund + left_over

    
# Need to use pd.read_csv as the handling afterwards needs it to be a dataframe
data = pd.read_csv(file_path)
signal = data['signal']
#print(signal)


num_line = data.shape[0]

for index, value in enumerate(signal):
    if value == 1.0:
        buy_price = data.at[index, '收盘价']
        buy_action()
        # To keep track of the fund at each stage
        # print('Fund amount is: ' + str(fund_EMA), 'Number of stocks is: ' + str(stock_number))
    elif value == 0.0:
        sell_price = data.at[index, '收盘价']
        sell_action()
        # To keep track of the fund at each stage
        # print('Fund amount is: ' + str(fund_EMA), 'Number of stocks is: ' + str(stock_number))

    else:
        pass
    n += 1
    if n > num_line:
        break
final_fund_EMA = stock_number*data.at[num_line-1, '收盘价'] + fund_EMA

print('EMA策略最终资金为: ' + str(final_fund_EMA))


serial = data.iloc[:, 0]

def alt_method(fund_alt):
    for index, value in enumerate(serial):
        if value == 0:
            remaining_fund = fund_alt% data.at[index, '收盘价']
            stock_number = fund_alt//data.at[index, '收盘价']
            # To show the current status
            # print('Fund amount is: ' + str(remaining_fund), 'Number of stocks is: ' + str(stock_number))
        elif value == num_line -1:
            final_fund_alt = remaining_fund + stock_number*data.at[index, '收盘价']
            # To show the final amount
            print('对比组最终资金为: ' + str(final_fund_alt))
            return final_fund_alt
        else:
            pass
final_fund_alt = alt_method(fund_alt)


perc_gain_EMA = ((final_fund_EMA - initial_fund)/initial_fund)*100
perc_gain_alt = ((final_fund_alt - initial_fund)/initial_fund)*100

print('The percentage gain for the EMA method is: ' + str(perc_gain_EMA) + '%')
print("The percentage gain for the control setup is: " + str(perc_gain_alt) +'%')
